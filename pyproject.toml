[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "coldstore"
version = "0.1.0"
description = "Standardized cold storage solution for research data and experimental results"
readme = "README.md"
authors = [
    {name = "Cold Storage Standard", email = "noreply@example.com"},
]
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Archiving :: Compression",
    "Topic :: Scientific/Engineering",
]
keywords = ["archive", "compression", "cold-storage", "preservation", "zstd", "par2"]

dependencies = [
    "typer>=0.12.0",
    "rich>=14.0.0",
    "loguru>=0.7.0",
    "zstandard>=0.22.0",
    "blake3>=1.0.5",
    "psutil>=7.0.0",
    "platformdirs>=4.0.0",
    "humanize>=4.0.0",
    "py7zr>=1.0.0",
    "rarfile>=4.2",
    "par2cmdline-turbo>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.12.3",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pre-commit>=4.2.0",
    "pyinstaller>=6.0.0",
]

[project.scripts]
coldstore = "coldstore.cli:app"

[project.urls]
Homepage = "https://github.com/rxchi1d/cold-storage-standard"
Repository = "https://github.com/rxchi1d/cold-storage-standard"
Issues = "https://github.com/rxchi1d/cold-storage-standard/issues"

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101", "D"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.coverage.run]
source = ["coldstore"]
omit = [
    "tests/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "ruff>=0.12.3",
]
